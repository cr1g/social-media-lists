# Generated by Django 4.0.2 on 2022-02-14 22:28

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('common', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=50, unique=True)),
                ('is_deleted', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='PersonsCollection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('persons', models.ManyToManyField(related_name='collections', related_query_name='collections', to='persons.Person')),
            ],
            options={
                'verbose_name': 'Persons Collection',
                'verbose_name_plural': 'Persons Collections',
            },
        ),
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
                ('first_name', models.CharField(max_length=25)),
                ('last_name', models.CharField(max_length=25)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='avatars')),
                ('is_deleted', models.BooleanField(default=False)),
                ('network', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='accounts', to='common.socialnetwork')),
                ('person', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='accounts', to='persons.person')),
            ],
            options={
                'unique_together': {('email', 'network')},
            },
        ),
    ]
